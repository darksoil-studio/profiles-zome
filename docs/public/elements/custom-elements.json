{
  "schemaVersion": "1.0.0",
  "readme": "",
  "modules": [
    {
      "kind": "javascript-module",
      "path": "locales/ca.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "templates",
          "type": {
            "text": "object"
          },
          "default": "{ 's1d96e130c0544d92': `No hi ha cap perfil creat`, 's2ceb11be2290bb1b': `Cancel·lar`, 's3798c0344c399eb7': str`Min. ${0} caràcters`, 's39aca5bd9eed9271': `Aquest agent encara no ha creat el seu perfil`, 's3fa309bef44c54e9': `Almenys 3 caràcters...`, 's639c68c3284a2269': `Actualitzar Perfil`, 's6ef2512ced4487d3': `No s'ha seleccionat cap agent encara`, 's7c2f825ccdf2bf38': `Error buscant els perfils de tots els agents`, 'sa77a504cfafd6d20': `Error buscant l'avatar de l'agent`, 'sbe57083b4c785878': `Crear Perfil`, 'sc5c9f04c2d0a5f1d': `Error buscant el perfil`, 'sc93a9aa3e5bcbf5d': `Guardar Perfil`, 'sdd16cd8b418b1752': `Introdueix almenys 3 caràcters per buscar...`, 'se9f30e4492cee2cd': `Nom d'usuari`, 'seb9fbffaa6fddee6': `Error creant el perfil`, 'sffdcc47c1ec17387': `Error buscant el teu perfil`, 'sc16e00a7a8b2fde2': `Back`, 'sa38d71671bdfbea7': `Profile Setup`, 's71da465987bd41a9': `Have you already created a profile in this app?`, 's2d788822fe858176': `No, create a new profile`, 's84fb3b4ddf306943': `Yes! Link this device`, 's859587e842b7882b': `Error fetching your profile.`, 'sf2b16baed2a5b0d1': `Error searching profiles`, 'sa4b18e98fd41dc11': `No nicknames match the filter`, 'sc463c08eba72bef4': `Search Profile`, }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "templates",
          "declaration": {
            "name": "templates",
            "module": "locales/ca.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "locales/de.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "templates",
          "type": {
            "text": "object"
          },
          "default": "{ 's1d96e130c0544d92': `Keine Profile vorhanden`, 's2ceb11be2290bb1b': `Abbrechen`, 's3798c0344c399eb7': str`Min. ${0} Zeichen`, 's39aca5bd9eed9271': `Diese Person hat noch kein Profil erstellt`, 's3fa309bef44c54e9': `Mindestens 3 Zeichen...`, 's639c68c3284a2269': `Profil Aktualisieren`, 's6ef2512ced4487d3': `Noch keine Personen ausgewählt.`, 's7c2f825ccdf2bf38': `Profile laden fehlgeschlagen`, 'sa77a504cfafd6d20': `Profilbild konnte nicht geladen werden`, 'sbe57083b4c785878': `Profil erstellen`, 'sc5c9f04c2d0a5f1d': `Profil laden fehlgeschlagen`, 'sc93a9aa3e5bcbf5d': `Profil speichern`, 'sdd16cd8b418b1752': `Mindestens 3 Buchstaben eingeben...`, 'se9f30e4492cee2cd': `Benutzername`, 'seb9fbffaa6fddee6': `Speichern fehlgeschlagen`, 'sffdcc47c1ec17387': `Profil laden fehlgeschlagen`, 'sc16e00a7a8b2fde2': `Back`, 'sa38d71671bdfbea7': `Profile Setup`, 's71da465987bd41a9': `Have you already created a profile in this app?`, 's2d788822fe858176': `No, create a new profile`, 's84fb3b4ddf306943': `Yes! Link this device`, 's859587e842b7882b': `Error fetching your profile.`, 'sf2b16baed2a5b0d1': `Error searching profiles`, 'sa4b18e98fd41dc11': `No nicknames match the filter`, 'sc463c08eba72bef4': `Search Profile`, }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "templates",
          "declaration": {
            "name": "templates",
            "module": "locales/de.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "locales/es.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "templates",
          "type": {
            "text": "object"
          },
          "default": "{ 's1d96e130c0544d92': `Aún no se ha creado ningún perfil`, 's2ceb11be2290bb1b': `Cancelar`, 's3798c0344c399eb7': str`Min. ${0} caracteres`, 's39aca5bd9eed9271': `Este agente no ha creado su perfil todavía`, 's3fa309bef44c54e9': `Al menos 3 caracteres...`, 's639c68c3284a2269': `Actualizar Perfil`, 's6ef2512ced4487d3': `No hay ningún agente seleccionado todavía.`, 's7c2f825ccdf2bf38': `Error buscando los perfiles de todos los agentes`, 'sa77a504cfafd6d20': `Error buscando el avatar del agente`, 'sbe57083b4c785878': `Crear Perfil`, 'sc5c9f04c2d0a5f1d': `Error buscando el perfil`, 'sc93a9aa3e5bcbf5d': `Guardar Perfil`, 'sdd16cd8b418b1752': `Introduce al menos 3 carácteres para buscar...`, 'se9f30e4492cee2cd': `Nombre de usuario`, 'seb9fbffaa6fddee6': `Error creando el perfil`, 'sffdcc47c1ec17387': `Error buscando tu perfil`, 'sc16e00a7a8b2fde2': `Back`, 'sa38d71671bdfbea7': `Profile Setup`, 's71da465987bd41a9': `Have you already created a profile in this app?`, 's2d788822fe858176': `No, create a new profile`, 's84fb3b4ddf306943': `Yes! Link this device`, 's859587e842b7882b': `Error fetching your profile.`, 'sf2b16baed2a5b0d1': `Error searching profiles`, 'sa4b18e98fd41dc11': `No nicknames match the filter`, 'sc463c08eba72bef4': `Search Profile`, }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "templates",
          "declaration": {
            "name": "templates",
            "module": "locales/es.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "locales/fr-fr.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "templates",
          "type": {
            "text": "object"
          },
          "default": "{ 's1d96e130c0544d92': `Il n'y a pas encore de profils créés`, 's3798c0344c399eb7': str`Min. ${0} caractères`, 's39aca5bd9eed9271': `Cet utilisateur n'a pas encore créé de profil`, 's3fa309bef44c54e9': `Au moins 3 caractères...`, 's639c68c3284a2269': `Mettre à jour Profil`, 'sbe57083b4c785878': `Créer Profil`, 'sc93a9aa3e5bcbf5d': `Enregistrer Profil`, 'se9f30e4492cee2cd': `Surnom`, 'sa77a504cfafd6d20': `Error fetching the agent's avatar`, 's7c2f825ccdf2bf38': `Error fetching the profiles for all agents`, 's2ceb11be2290bb1b': `Cancel`, 'seb9fbffaa6fddee6': `Error creating the profile`, 'sc5c9f04c2d0a5f1d': `Error fetching the profile`, 'sffdcc47c1ec17387': `Error fetching your profile`, 'sc16e00a7a8b2fde2': `Back`, 'sa38d71671bdfbea7': `Profile Setup`, 's71da465987bd41a9': `Have you already created a profile in this app?`, 's2d788822fe858176': `No, create a new profile`, 's84fb3b4ddf306943': `Yes! Link this device`, 's859587e842b7882b': `Error fetching your profile.`, 'sdd16cd8b418b1752': `Enter at least 3 chars to search...`, 'sf2b16baed2a5b0d1': `Error searching profiles`, 'sa4b18e98fd41dc11': `No nicknames match the filter`, 'sc463c08eba72bef4': `Search Profile`, 's6ef2512ced4487d3': `No agents selected yet.`, }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "templates",
          "declaration": {
            "name": "templates",
            "module": "locales/fr-fr.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "locales/locales.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "sourceLocale",
          "default": "`en`",
          "description": "The locale code that templates in this source code are written in."
        },
        {
          "kind": "variable",
          "name": "targetLocales",
          "type": {
            "text": "array"
          },
          "default": "[ `ca`, `de`, `es`, `fr-fr`, `sv`, ]",
          "description": "The other locale codes that this application is localized into. Sorted\nlexicographically."
        },
        {
          "kind": "variable",
          "name": "allLocales",
          "type": {
            "text": "array"
          },
          "default": "[ `ca`, `de`, `en`, `es`, `fr-fr`, `sv`, ]",
          "description": "All valid project locale codes. Sorted lexicographically."
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "sourceLocale",
          "declaration": {
            "name": "sourceLocale",
            "module": "locales/locales.js"
          }
        },
        {
          "kind": "js",
          "name": "targetLocales",
          "declaration": {
            "name": "targetLocales",
            "module": "locales/locales.js"
          }
        },
        {
          "kind": "js",
          "name": "allLocales",
          "declaration": {
            "name": "allLocales",
            "module": "locales/locales.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "locales/sv.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "templates",
          "type": {
            "text": "object"
          },
          "default": "{ 's1d96e130c0544d92': `Det finns ingen profil skapad än`, 's2ceb11be2290bb1b': `Avbryt`, 's3798c0344c399eb7': str`Min. ${0} tecken`, 's39aca5bd9eed9271': `Denna agent har inte skapat en profil än`, 's3fa309bef44c54e9': `Minst 3 tecken...`, 's639c68c3284a2269': `Uppdatera profil`, 's6ef2512ced4487d3': `Ingen agent vald än.`, 's7c2f825ccdf2bf38': `Fel vid hämtning av profiler för alla agenter`, 'sa77a504cfafd6d20': `Fel vid hämtning av agentens avatar`, 'sbe57083b4c785878': `Skapa profil`, 'sc5c9f04c2d0a5f1d': `Fel vid hämtning av profilen`, 'sc93a9aa3e5bcbf5d': `Spara profil`, 'sdd16cd8b418b1752': `Skriv minst 3 tecken för att söka...`, 'se9f30e4492cee2cd': `Smeknamn`, 'seb9fbffaa6fddee6': `Fel inträffade vid skapande av profil`, 'sffdcc47c1ec17387': `Fel vid hämtning av din profil`, 'sc16e00a7a8b2fde2': `Back`, 'sa38d71671bdfbea7': `Profile Setup`, 's71da465987bd41a9': `Have you already created a profile in this app?`, 's2d788822fe858176': `No, create a new profile`, 's84fb3b4ddf306943': `Yes! Link this device`, 's859587e842b7882b': `Error fetching your profile.`, 'sf2b16baed2a5b0d1': `Error searching profiles`, 'sa4b18e98fd41dc11': `No nicknames match the filter`, 'sc463c08eba72bef4': `Search Profile`, }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "templates",
          "declaration": {
            "name": "templates",
            "module": "locales/sv.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/config.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "defaultConfig",
          "type": {
            "text": "ProfilesConfig"
          },
          "default": "{ avatarMode: 'avatar-optional', additionalFields: [], minNicknameLength: 3, }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "defaultConfig",
          "declaration": {
            "name": "defaultConfig",
            "module": "src/config.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/context.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "profilesStoreContext"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "profilesStoreContext",
          "declaration": {
            "name": "profilesStoreContext",
            "module": "src/context.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./types.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./context.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./profiles-client.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./profiles-store.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./config.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/mocks.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "demoProfiles",
          "return": {
            "type": {
              "text": "Promise<AgentPubKeyMap<Profile>>"
            }
          }
        },
        {
          "kind": "class",
          "description": "",
          "name": "ProfilesZomeMock",
          "members": [
            {
              "kind": "field",
              "name": "profilesForAgent",
              "type": {
                "text": "AgentPubKeyMap<Link[]>"
              },
              "default": "new HoloHashMap()"
            },
            {
              "kind": "field",
              "name": "agentsForProfile",
              "type": {
                "text": "HoloHashMap<ActionHash, Link[]>"
              },
              "default": "new HoloHashMap()"
            },
            {
              "kind": "field",
              "name": "profiles",
              "type": {
                "text": "HoloHashMap<ActionHash, Record>"
              },
              "default": "new HoloHashMap()"
            },
            {
              "kind": "field",
              "name": "latestVersion",
              "type": {
                "text": "HoloHashMap<ActionHash, ActionHash>"
              },
              "default": "new HoloHashMap()"
            },
            {
              "kind": "field",
              "name": "prefix",
              "type": {
                "text": "Map<string, Link[]>"
              },
              "default": "new Map()"
            },
            {
              "kind": "method",
              "name": "initProfiles",
              "parameters": [
                {
                  "name": "agentsProfiles",
                  "type": {
                    "text": "AgentPubKeyMap<Profile>"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "setProfileForAgent",
              "parameters": [
                {
                  "name": "agent",
                  "type": {
                    "text": "AgentPubKey"
                  }
                },
                {
                  "name": "profile",
                  "type": {
                    "text": "Profile"
                  }
                },
                {
                  "name": "lastProfile",
                  "optional": true,
                  "type": {
                    "text": "ActionHash"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "create_profile",
              "return": {
                "type": {
                  "text": "Promise<Record>"
                }
              },
              "parameters": [
                {
                  "name": "profile",
                  "type": {
                    "text": "Profile"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "update_profile",
              "return": {
                "type": {
                  "text": "Promise<Record>"
                }
              },
              "parameters": [
                {
                  "name": "{\n\t\tprevious_profile_hash,\n\t\tupdated_profile,\n\t}",
                  "type": {
                    "text": "{\n\t\tprevious_profile_hash: ActionHash;\n\t\tupdated_profile: Profile;\n\t}"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "search_profiles",
              "parameters": [
                {
                  "name": "nickname_filter",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "get_profile_for_agent",
              "parameters": [
                {
                  "name": "agent_address",
                  "type": {
                    "text": "AgentPubKey"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "get_agents_for_profile",
              "parameters": [
                {
                  "name": "profileHash",
                  "type": {
                    "text": "ActionHash"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "get_all_profiles"
            },
            {
              "kind": "method",
              "name": "get_latest_profile",
              "parameters": [
                {
                  "name": "originalProfileHash",
                  "type": {
                    "text": "ActionHash"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "get_original_profile",
              "parameters": [
                {
                  "name": "originalProfileHash",
                  "type": {
                    "text": "ActionHash"
                  }
                }
              ]
            }
          ],
          "superclass": {
            "name": "ZomeMock",
            "package": "@tnesh-stack/utils"
          }
        },
        {
          "kind": "function",
          "name": "sampleProfile",
          "return": {
            "type": {
              "text": "Promise<Profile>"
            }
          },
          "parameters": [
            {
              "name": "client",
              "type": {
                "text": "ProfilesClient"
              }
            },
            {
              "name": "partialProfile",
              "default": "{}",
              "type": {
                "text": "Partial<Profile>"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "demoProfiles",
          "declaration": {
            "name": "demoProfiles",
            "module": "src/mocks.ts"
          }
        },
        {
          "kind": "js",
          "name": "ProfilesZomeMock",
          "declaration": {
            "name": "ProfilesZomeMock",
            "module": "src/mocks.ts"
          }
        },
        {
          "kind": "js",
          "name": "sampleProfile",
          "declaration": {
            "name": "sampleProfile",
            "module": "src/mocks.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/profiles-client.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "ProfilesClient",
          "members": [
            {
              "kind": "method",
              "name": "getProfileForAgent",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "parameters": [
                {
                  "name": "agentPubKey",
                  "type": {
                    "text": "AgentPubKey"
                  },
                  "description": "the agent to get the profileHash for"
                }
              ],
              "description": "Get the profiles links for the given agent"
            },
            {
              "kind": "method",
              "name": "getAgentsForProfile",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "parameters": [
                {
                  "name": "profileHash",
                  "type": {
                    "text": "ActionHash"
                  },
                  "description": "the profile to get all the agents for"
                }
              ],
              "description": "Get the agents links for the given profile"
            },
            {
              "kind": "method",
              "name": "getLatestProfile",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "parameters": [
                {
                  "name": "profileHash",
                  "type": {
                    "text": "ActionHash"
                  },
                  "description": "the profileHash to get the latest version for"
                }
              ],
              "description": "Get the latest version of profile, if they have created it"
            },
            {
              "kind": "method",
              "name": "getOriginalProfile",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "parameters": [
                {
                  "name": "profileHash",
                  "type": {
                    "text": "ActionHash"
                  },
                  "description": "the profileHash to get the original version for"
                }
              ],
              "description": "Get the original profile for the given agent, if they have created it"
            },
            {
              "kind": "method",
              "name": "searchProfiles",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "parameters": [
                {
                  "name": "nicknameFilter",
                  "type": {
                    "text": "string"
                  },
                  "description": "must be of at least 3 characters"
                }
              ],
              "description": "Search profiles that start with nicknameFilter"
            },
            {
              "kind": "method",
              "name": "getAllProfiles",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "description": "Get links to all profiles in the DHT"
            },
            {
              "kind": "method",
              "name": "createProfile",
              "return": {
                "type": {
                  "text": "Promise<EntryRecord<Profile>>"
                }
              },
              "parameters": [
                {
                  "name": "profile",
                  "type": {
                    "text": "Profile"
                  },
                  "description": "the profile to create"
                }
              ],
              "description": "Create my profile"
            },
            {
              "kind": "method",
              "name": "updateProfile",
              "return": {
                "type": {
                  "text": "Promise<EntryRecord<Profile>>"
                }
              },
              "parameters": [
                {
                  "name": "previousProfileHash",
                  "type": {
                    "text": "ActionHash"
                  }
                },
                {
                  "name": "updatedProfile",
                  "type": {
                    "text": "Profile"
                  }
                },
                {
                  "description": "the profile to create",
                  "name": "profile"
                }
              ],
              "description": "Update my profile"
            },
            {
              "kind": "method",
              "name": "linkMyAgentToProfile",
              "parameters": [
                {
                  "name": "profileHash",
                  "type": {
                    "text": "ActionHash"
                  }
                },
                {
                  "description": "the profile to create",
                  "name": "profile"
                }
              ],
              "description": "Links my agent to the given profile\nThis is useful when a user has two devices in the same network, and they want to appear under one single profile\nThe first agent would create the profile, and the second must first link devices with the first one\nand then call this function\n\nRequires that my agent has linked devices with the creator of the profile"
            }
          ],
          "superclass": {
            "name": "ZomeClient",
            "package": "@tnesh-stack/utils"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "ProfilesClient",
          "declaration": {
            "name": "ProfilesClient",
            "module": "src/profiles-client.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/profiles-store.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "ProfilesStore",
          "members": [
            {
              "kind": "field",
              "name": "config",
              "type": {
                "text": "ProfilesConfig"
              },
              "default": "{ ...defaultConfig, ...config }"
            },
            {
              "kind": "field",
              "name": "allProfiles",
              "description": "Fetches the profiles for all agents in the DHT"
            },
            {
              "kind": "field",
              "name": "agentToProfileLinks",
              "privacy": "private",
              "default": "new MemoHoloHashMap((agent: AgentPubKey) => liveLinksSignal( this.client, agent, () => this.client.getProfileForAgent(agent), 'AgentToProfile', ), )"
            },
            {
              "kind": "field",
              "name": "profileForAgent",
              "default": "new MemoHoloHashMap( (agent: AgentPubKey) => new AsyncComputed(() => { const links = this.agentToProfileLinks.get(agent).get(); if (links.status !== 'completed') return links; if (links.value.length === 0) return { status: 'completed', value: undefined, }; // TODO: handle multiple links gracefully const latestLink = links.value.sort( (l1, l2) => l2.timestamp - l1.timestamp, )[0]; const profileHash = latestLink.target; return { status: 'completed', value: this.profiles.get(profileHash), }; }), )",
              "description": "Fetches the profile for the given agent"
            },
            {
              "kind": "field",
              "name": "agentsForProfile",
              "default": "new MemoHoloHashMap((profileHash: ActionHash) => mapCompleted( liveLinksSignal( this.client, profileHash, () => this.client.getAgentsForProfile(profileHash), 'ProfileToAgent', ), links => uniquify(links.map(l => retype(l.target, HashType.AGENT))), ), )"
            },
            {
              "kind": "field",
              "name": "profiles",
              "default": "new MemoHoloHashMap((profileHash: ActionHash) => ({ profileHash, latestVersion: latestVersionOfEntrySignal(this.client, () => this.client.getLatestProfile(profileHash), ), original: immutableEntrySignal(() => this.client.getOriginalProfile(profileHash), ), }))"
            },
            {
              "kind": "field",
              "name": "myProfile"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "ProfilesStore",
          "declaration": {
            "name": "ProfilesStore",
            "module": "src/profiles-store.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/types.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/utils.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "areHashesArraysEqual",
          "return": {
            "type": {
              "text": "boolean"
            }
          },
          "parameters": [
            {
              "name": "hashes1",
              "type": {
                "text": "HoloHash[]"
              }
            },
            {
              "name": "hashes2",
              "type": {
                "text": "HoloHash[]"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "areHashesArraysEqual",
          "declaration": {
            "name": "areHashesArraysEqual",
            "module": "src/utils.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/elements/agent-avatar.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "AgentAvatar",
          "members": [
            {
              "kind": "field",
              "name": "agentPubKey",
              "type": {
                "text": "AgentPubKey | undefined"
              },
              "description": "The public key identifying the agent whose profile is going to be shown.",
              "attribute": "agentPubKey"
            },
            {
              "kind": "field",
              "name": "profileHash",
              "type": {
                "text": "ActionHash | undefined"
              },
              "description": "The profile hash to be shown",
              "attribute": "profileHash"
            },
            {
              "kind": "field",
              "name": "size",
              "type": {
                "text": "number"
              },
              "default": "32",
              "description": "Size of the avatar image in pixels.",
              "attribute": "size"
            },
            {
              "kind": "field",
              "name": "disableTooltip",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Disables showing the tooltip for the public key",
              "attribute": "disable-tooltip"
            },
            {
              "kind": "field",
              "name": "disableCopy",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Disable copying of the public key on click",
              "attribute": "disable-copy"
            },
            {
              "kind": "field",
              "name": "store",
              "type": {
                "text": "ProfilesStore"
              },
              "description": "Profiles store for this element, not required if you embed this element inside a <profiles-context>",
              "attribute": "store"
            },
            {
              "kind": "method",
              "name": "renderIdenticon",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "renderProfile",
              "privacy": "private",
              "parameters": [
                {
                  "name": "profile",
                  "type": {
                    "text": "EntryRecord<Profile> | undefined"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "profile",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "AsyncResult<EntryRecord<Profile> | undefined>"
                }
              }
            }
          ],
          "events": [
            {
              "name": "profile-clicked",
              "type": {
                "text": "CustomEvent"
              }
            }
          ],
          "attributes": [
            {
              "name": "agentPubKey",
              "type": {
                "text": "AgentPubKey | undefined"
              },
              "description": "The public key identifying the agent whose profile is going to be shown.",
              "fieldName": "agentPubKey"
            },
            {
              "name": "profileHash",
              "type": {
                "text": "ActionHash | undefined"
              },
              "description": "The profile hash to be shown",
              "fieldName": "profileHash"
            },
            {
              "name": "size",
              "type": {
                "text": "number"
              },
              "default": "32",
              "description": "Size of the avatar image in pixels.",
              "fieldName": "size"
            },
            {
              "name": "disable-tooltip",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Disables showing the tooltip for the public key",
              "fieldName": "disableTooltip"
            },
            {
              "name": "disable-copy",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Disable copying of the public key on click",
              "fieldName": "disableCopy"
            },
            {
              "name": "store",
              "type": {
                "text": "ProfilesStore"
              },
              "description": "Profiles store for this element, not required if you embed this element inside a <profiles-context>",
              "fieldName": "store"
            }
          ],
          "mixins": [
            {
              "name": "SignalWatcher",
              "package": "@tnesh-stack/signals"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "agent-avatar",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "AgentAvatar",
          "declaration": {
            "name": "AgentAvatar",
            "module": "src/elements/agent-avatar.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "agent-avatar",
          "declaration": {
            "name": "AgentAvatar",
            "module": "src/elements/agent-avatar.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/elements/agent-mention.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "AgentMention",
          "members": [
            {
              "kind": "field",
              "name": "agentPubKey",
              "type": {
                "text": "AgentPubKey"
              },
              "description": "The public key identifying the agent whose profile is going to be shown.",
              "attribute": "agentPubKey"
            },
            {
              "kind": "field",
              "name": "profileHash",
              "type": {
                "text": "ActionHash | undefined"
              },
              "description": "The profile hash to be shown",
              "attribute": "profileHash"
            },
            {
              "kind": "field",
              "name": "size",
              "type": {
                "text": "number"
              },
              "default": "24",
              "description": "Size of the avatar image in pixels.",
              "attribute": "size"
            },
            {
              "kind": "field",
              "name": "store",
              "type": {
                "text": "ProfilesStore"
              },
              "description": "Profiles store for this element, not required if you embed this element inside a <profiles-context>",
              "attribute": "store"
            },
            {
              "kind": "method",
              "name": "renderAvatar",
              "privacy": "private",
              "parameters": [
                {
                  "name": "profile",
                  "type": {
                    "text": "EntryRecord<Profile> | undefined"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "renderProfile",
              "privacy": "private",
              "parameters": [
                {
                  "name": "profile",
                  "type": {
                    "text": "EntryRecord<Profile> | undefined"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "profile",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "AsyncResult<EntryRecord<Profile> | undefined>"
                }
              }
            },
            {
              "kind": "method",
              "name": "renderContent",
              "privacy": "private"
            }
          ],
          "attributes": [
            {
              "name": "agentPubKey",
              "type": {
                "text": "AgentPubKey"
              },
              "description": "The public key identifying the agent whose profile is going to be shown.",
              "fieldName": "agentPubKey"
            },
            {
              "name": "profileHash",
              "type": {
                "text": "ActionHash | undefined"
              },
              "description": "The profile hash to be shown",
              "fieldName": "profileHash"
            },
            {
              "name": "size",
              "type": {
                "text": "number"
              },
              "default": "24",
              "description": "Size of the avatar image in pixels.",
              "fieldName": "size"
            },
            {
              "name": "store",
              "type": {
                "text": "ProfilesStore"
              },
              "description": "Profiles store for this element, not required if you embed this element inside a <profiles-context>",
              "fieldName": "store"
            }
          ],
          "mixins": [
            {
              "name": "SignalWatcher",
              "package": "@tnesh-stack/signals"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "agent-mention",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "AgentMention",
          "declaration": {
            "name": "AgentMention",
            "module": "src/elements/agent-mention.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "agent-mention",
          "declaration": {
            "name": "AgentMention",
            "module": "src/elements/agent-mention.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/elements/agents-avatars.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "AgentsAvatars",
          "members": [
            {
              "kind": "field",
              "name": "agents",
              "type": {
                "text": "AgentPubKey[]"
              },
              "default": "[]",
              "attribute": "agents"
            },
            {
              "kind": "field",
              "name": "profilesHashes",
              "type": {
                "text": "ActionHash[]"
              },
              "default": "[]",
              "attribute": "profilesHashes"
            }
          ],
          "attributes": [
            {
              "name": "agents",
              "type": {
                "text": "AgentPubKey[]"
              },
              "default": "[]",
              "fieldName": "agents"
            },
            {
              "name": "profilesHashes",
              "type": {
                "text": "ActionHash[]"
              },
              "default": "[]",
              "fieldName": "profilesHashes"
            }
          ],
          "mixins": [
            {
              "name": "SignalWatcher",
              "package": "@tnesh-stack/signals"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "agents-avatars",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "AgentsAvatars",
          "declaration": {
            "name": "AgentsAvatars",
            "module": "src/elements/agents-avatars.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "agents-avatars",
          "declaration": {
            "name": "AgentsAvatars",
            "module": "src/elements/agents-avatars.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/elements/all-profiles.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "AllProfiles",
          "members": [
            {
              "kind": "field",
              "name": "store",
              "type": {
                "text": "ProfilesStore"
              },
              "description": "Profiles store for this element, not required if you embed this element inside a <profiles-context>",
              "attribute": "store"
            },
            {
              "kind": "method",
              "name": "initials",
              "return": {
                "type": {
                  "text": "string"
                }
              },
              "parameters": [
                {
                  "name": "nickname",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "description": "Private properties"
            },
            {
              "kind": "method",
              "name": "fireAgentSelected",
              "parameters": [
                {
                  "name": "profileHash",
                  "type": {
                    "text": "ActionHash"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "renderList",
              "parameters": [
                {
                  "name": "profiles",
                  "type": {
                    "text": "ReadonlyMap<ActionHash, EntryRecord<Profile> | undefined>"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "allProfiles"
            }
          ],
          "events": [
            {
              "name": "profile-selected",
              "type": {
                "text": "CustomEvent"
              },
              "description": "Fired when the user selects an agent from the list. Detail will have this shape: { profileHash: <ProfileHash as ActionHash> }"
            }
          ],
          "attributes": [
            {
              "name": "store",
              "type": {
                "text": "ProfilesStore"
              },
              "description": "Profiles store for this element, not required if you embed this element inside a <profiles-context>",
              "fieldName": "store"
            }
          ],
          "mixins": [
            {
              "name": "SignalWatcher",
              "package": "@tnesh-stack/signals"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "all-profiles",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "AllProfiles",
          "declaration": {
            "name": "AllProfiles",
            "module": "src/elements/all-profiles.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "all-profiles",
          "declaration": {
            "name": "AllProfiles",
            "module": "src/elements/all-profiles.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/elements/create-profile.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "A custom element that fires event on value change.",
          "name": "CreateProfile",
          "members": [
            {
              "kind": "field",
              "name": "store",
              "type": {
                "text": "ProfilesStore"
              },
              "description": "Profiles store for this element, not required if you embed this element inside a <profiles-context>",
              "attribute": "store"
            },
            {
              "kind": "method",
              "name": "createProfile",
              "parameters": [
                {
                  "name": "profile",
                  "type": {
                    "text": "Profile"
                  }
                }
              ],
              "description": "Private properties"
            }
          ],
          "events": [
            {
              "name": "profile-created",
              "type": {
                "text": "CustomEvent"
              },
              "description": "Fired after the profile has been created. Detail will have this shape: { profile: { nickname, fields } }"
            }
          ],
          "attributes": [
            {
              "name": "store",
              "type": {
                "text": "ProfilesStore"
              },
              "description": "Profiles store for this element, not required if you embed this element inside a <profiles-context>",
              "fieldName": "store"
            }
          ],
          "mixins": [
            {
              "name": "SignalWatcher",
              "package": "@tnesh-stack/signals"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "create-profile",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "CreateProfile",
          "declaration": {
            "name": "CreateProfile",
            "module": "src/elements/create-profile.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "create-profile",
          "declaration": {
            "name": "CreateProfile",
            "module": "src/elements/create-profile.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/elements/edit-profile.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "EditProfile",
          "members": [
            {
              "kind": "field",
              "name": "profile",
              "type": {
                "text": "EntryRecord<Profile> | undefined"
              },
              "description": "The profile to be edited.",
              "attribute": "profile"
            },
            {
              "kind": "field",
              "name": "saveProfileLabel",
              "type": {
                "text": "string | undefined"
              },
              "description": "Label for the save profile button.",
              "attribute": "save-profile-label"
            },
            {
              "kind": "field",
              "name": "store",
              "type": {
                "text": "ProfilesStore"
              },
              "description": "Profiles store for this element, not required if you embed this element inside a <profiles-context>",
              "attribute": "store"
            },
            {
              "kind": "field",
              "name": "allowCancel",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "allow-cancel"
            },
            {
              "kind": "method",
              "name": "avatarMode",
              "description": "Private properties"
            },
            {
              "kind": "method",
              "name": "fireSaveProfile",
              "parameters": [
                {
                  "name": "fields",
                  "type": {
                    "text": "Record<string, string>"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "fireCancel"
            },
            {
              "kind": "method",
              "name": "renderField",
              "parameters": [
                {
                  "name": "fieldConfig",
                  "type": {
                    "text": "FieldConfig"
                  }
                }
              ]
            }
          ],
          "events": [
            {
              "name": "save-profile",
              "type": {
                "text": "CustomEvent"
              },
              "description": "Fired when the save profile button is clicked"
            },
            {
              "name": "cancel-edit-profile",
              "type": {
                "text": "CustomEvent"
              }
            }
          ],
          "attributes": [
            {
              "name": "profile",
              "type": {
                "text": "EntryRecord<Profile> | undefined"
              },
              "description": "The profile to be edited.",
              "fieldName": "profile"
            },
            {
              "name": "save-profile-label",
              "type": {
                "text": "string | undefined"
              },
              "description": "Label for the save profile button.",
              "fieldName": "saveProfileLabel"
            },
            {
              "name": "store",
              "type": {
                "text": "ProfilesStore"
              },
              "description": "Profiles store for this element, not required if you embed this element inside a <profiles-context>",
              "fieldName": "store"
            },
            {
              "name": "allow-cancel",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "allowCancel"
            }
          ],
          "mixins": [
            {
              "name": "SignalWatcher",
              "package": "@tnesh-stack/signals"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "edit-profile",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "EditProfile",
          "declaration": {
            "name": "EditProfile",
            "module": "src/elements/edit-profile.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "edit-profile",
          "declaration": {
            "name": "EditProfile",
            "module": "src/elements/edit-profile.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/elements/my-profile.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "MyProfile",
          "members": [
            {
              "kind": "field",
              "name": "store",
              "type": {
                "text": "ProfilesStore"
              },
              "description": "Profiles store for this element, not required if you embed this element inside a <profiles-context>",
              "attribute": "store"
            }
          ],
          "attributes": [
            {
              "name": "store",
              "type": {
                "text": "ProfilesStore"
              },
              "description": "Profiles store for this element, not required if you embed this element inside a <profiles-context>",
              "fieldName": "store"
            }
          ],
          "mixins": [
            {
              "name": "SignalWatcher",
              "package": "@tnesh-stack/signals"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "my-profile",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "MyProfile",
          "declaration": {
            "name": "MyProfile",
            "module": "src/elements/my-profile.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "my-profile",
          "declaration": {
            "name": "MyProfile",
            "module": "src/elements/my-profile.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/elements/profile-detail.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "ProfileDetail",
          "members": [
            {
              "kind": "field",
              "name": "agentPubKey",
              "type": {
                "text": "AgentPubKey"
              },
              "description": "Public key identifying the agent for which the profile should be shown",
              "attribute": "agentPubKey"
            },
            {
              "kind": "field",
              "name": "profileHash",
              "type": {
                "text": "ActionHash | undefined"
              },
              "description": "The public key of the agent to render the profile for",
              "attribute": "profileHash"
            },
            {
              "kind": "field",
              "name": "store",
              "type": {
                "text": "ProfilesStore"
              },
              "description": "Profiles store for this element, not required if you embed this element inside a <profiles-context>",
              "attribute": "store"
            },
            {
              "kind": "method",
              "name": "getAdditionalFields",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "Record<string, string>"
                }
              },
              "parameters": [
                {
                  "name": "profile",
                  "type": {
                    "text": "Profile"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "profile",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "AsyncResult<EntryRecord<Profile> | undefined>"
                }
              }
            },
            {
              "kind": "method",
              "name": "renderAdditionalField",
              "privacy": "private",
              "parameters": [
                {
                  "name": "fieldId",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "fieldValue",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "renderProfile",
              "privacy": "private",
              "parameters": [
                {
                  "name": "profile",
                  "type": {
                    "text": "EntryRecord<Profile> | undefined"
                  }
                }
              ]
            }
          ],
          "attributes": [
            {
              "name": "agentPubKey",
              "type": {
                "text": "AgentPubKey"
              },
              "description": "Public key identifying the agent for which the profile should be shown",
              "fieldName": "agentPubKey"
            },
            {
              "name": "profileHash",
              "type": {
                "text": "ActionHash | undefined"
              },
              "description": "The public key of the agent to render the profile for",
              "fieldName": "profileHash"
            },
            {
              "name": "store",
              "type": {
                "text": "ProfilesStore"
              },
              "description": "Profiles store for this element, not required if you embed this element inside a <profiles-context>",
              "fieldName": "store"
            }
          ],
          "mixins": [
            {
              "name": "SignalWatcher",
              "package": "@tnesh-stack/signals"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "profile-detail",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "ProfileDetail",
          "declaration": {
            "name": "ProfileDetail",
            "module": "src/elements/profile-detail.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "profile-detail",
          "declaration": {
            "name": "ProfileDetail",
            "module": "src/elements/profile-detail.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/elements/profile-list-item-skeleton.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "ProfileListItemSkeleton",
          "members": [],
          "mixins": [
            {
              "name": "SignalWatcher",
              "package": "@tnesh-stack/signals"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "profile-list-item-skeleton",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "ProfileListItemSkeleton",
          "declaration": {
            "name": "ProfileListItemSkeleton",
            "module": "src/elements/profile-list-item-skeleton.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "profile-list-item-skeleton",
          "declaration": {
            "name": "ProfileListItemSkeleton",
            "module": "src/elements/profile-list-item-skeleton.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/elements/profile-list-item.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "ProfileListItem",
          "members": [
            {
              "kind": "field",
              "name": "agentPubKey",
              "type": {
                "text": "AgentPubKey | undefined"
              },
              "description": "The public key of the agent to render the profile for",
              "attribute": "agentPubKey"
            },
            {
              "kind": "field",
              "name": "profileHash",
              "type": {
                "text": "ActionHash | undefined"
              },
              "description": "The public key of the agent to render the profile for",
              "attribute": "profileHash"
            },
            {
              "kind": "field",
              "name": "store",
              "type": {
                "text": "ProfilesStore"
              },
              "description": "Profiles store for this element, not required if you embed this element inside a <profiles-context>",
              "attribute": "store"
            },
            {
              "kind": "method",
              "name": "profile",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "AsyncResult<EntryRecord<Profile> | undefined>"
                }
              }
            }
          ],
          "attributes": [
            {
              "name": "agentPubKey",
              "type": {
                "text": "AgentPubKey | undefined"
              },
              "description": "The public key of the agent to render the profile for",
              "fieldName": "agentPubKey"
            },
            {
              "name": "profileHash",
              "type": {
                "text": "ActionHash | undefined"
              },
              "description": "The public key of the agent to render the profile for",
              "fieldName": "profileHash"
            },
            {
              "name": "store",
              "type": {
                "text": "ProfilesStore"
              },
              "description": "Profiles store for this element, not required if you embed this element inside a <profiles-context>",
              "fieldName": "store"
            }
          ],
          "mixins": [
            {
              "name": "SignalWatcher",
              "package": "@tnesh-stack/signals"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "profile-list-item",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "ProfileListItem",
          "declaration": {
            "name": "ProfileListItem",
            "module": "src/elements/profile-list-item.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "profile-list-item",
          "declaration": {
            "name": "ProfileListItem",
            "module": "src/elements/profile-list-item.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/elements/profile-prompt.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "ProfilePrompt",
          "slots": [
            {
              "description": "The content of the app",
              "name": "default"
            },
            {
              "description": "Will be displayed above the create-profile form when the user is prompted with it",
              "name": "hero"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "store",
              "type": {
                "text": "ProfilesStore"
              },
              "description": "Profiles store for this element, not required if you embed this element inside a `<profiles-context>`",
              "attribute": "store"
            },
            {
              "kind": "field",
              "name": "view",
              "type": {
                "text": "'question' | 'create-profile' | 'link-device'"
              },
              "privacy": "private",
              "default": "'question'",
              "description": "Private properties"
            },
            {
              "kind": "method",
              "name": "renderContent",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "renderPrompt",
              "privacy": "private",
              "parameters": [
                {
                  "name": "myProfileExists",
                  "type": {
                    "text": "boolean"
                  }
                }
              ]
            }
          ],
          "attributes": [
            {
              "name": "store",
              "type": {
                "text": "ProfilesStore"
              },
              "description": "Profiles store for this element, not required if you embed this element inside a `<profiles-context>`",
              "fieldName": "store"
            }
          ],
          "mixins": [
            {
              "name": "SignalWatcher",
              "package": "@tnesh-stack/signals"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "profile-prompt",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "ProfilePrompt",
          "declaration": {
            "name": "ProfilePrompt",
            "module": "src/elements/profile-prompt.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "profile-prompt",
          "declaration": {
            "name": "ProfilePrompt",
            "module": "src/elements/profile-prompt.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/elements/profiles-context.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "ProfilesContext",
          "members": [
            {
              "kind": "field",
              "name": "store",
              "type": {
                "text": "ProfilesStore"
              },
              "attribute": "store"
            }
          ],
          "attributes": [
            {
              "name": "store",
              "type": {
                "text": "ProfilesStore"
              },
              "fieldName": "store"
            }
          ],
          "mixins": [
            {
              "name": "SignalWatcher",
              "package": "@tnesh-stack/signals"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "profiles-context",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "ProfilesContext",
          "declaration": {
            "name": "ProfilesContext",
            "module": "src/elements/profiles-context.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "profiles-context",
          "declaration": {
            "name": "ProfilesContext",
            "module": "src/elements/profiles-context.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/elements/search-profile-dropdown.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "SearchProfileDropdown",
          "members": [
            {
              "kind": "field",
              "name": "searchFilter",
              "description": "Public attributes"
            },
            {
              "kind": "field",
              "name": "_searchFilter",
              "default": "new Signal.State<string | undefined>(undefined)"
            },
            {
              "kind": "field",
              "name": "open",
              "type": {
                "text": "boolean | undefined"
              },
              "attribute": "open"
            },
            {
              "kind": "field",
              "name": "store",
              "type": {
                "text": "ProfilesStore"
              },
              "description": "Profiles store for this element, not required if you embed this element inside a <profiles-context>",
              "attribute": "store"
            },
            {
              "kind": "field",
              "name": "excludedProfiles",
              "type": {
                "text": "ActionHash[]"
              },
              "default": "[]",
              "description": "Profiles that won't be listed in the search",
              "attribute": "excludedProfiles"
            },
            {
              "kind": "method",
              "name": "onProfileSelected",
              "parameters": [
                {
                  "name": "profileHash",
                  "type": {
                    "text": "ActionHash"
                  }
                },
                {
                  "name": "profile",
                  "type": {
                    "text": "EntryRecord<Profile>"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "renderProfileList"
            }
          ],
          "events": [
            {
              "name": "profile-selected",
              "type": {
                "text": "CustomEvent"
              },
              "description": "Fired when the user selects some agent. Detail will have this shape: { profileHash: ActionHash }"
            }
          ],
          "attributes": [
            {
              "name": "open",
              "type": {
                "text": "boolean | undefined"
              },
              "fieldName": "open"
            },
            {
              "name": "store",
              "type": {
                "text": "ProfilesStore"
              },
              "description": "Profiles store for this element, not required if you embed this element inside a <profiles-context>",
              "fieldName": "store"
            },
            {
              "name": "excludedProfiles",
              "type": {
                "text": "ActionHash[]"
              },
              "default": "[]",
              "description": "Profiles that won't be listed in the search",
              "fieldName": "excludedProfiles"
            }
          ],
          "mixins": [
            {
              "name": "SignalWatcher",
              "package": "@tnesh-stack/signals"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "search-profile-dropdown",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "SearchProfileDropdown",
          "declaration": {
            "name": "SearchProfileDropdown",
            "module": "src/elements/search-profile-dropdown.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "search-profile-dropdown",
          "declaration": {
            "name": "SearchProfileDropdown",
            "module": "src/elements/search-profile-dropdown.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/elements/search-profile.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "SearchProfile",
          "members": [
            {
              "kind": "field",
              "name": "name",
              "type": {
                "text": "string"
              },
              "description": "The name of the field if this element is used inside a form\nRequired only if the element is used inside a form",
              "attribute": "name"
            },
            {
              "kind": "field",
              "name": "defaultValue",
              "type": {
                "text": "ActionHash | undefined"
              },
              "description": "The default value of the field if this element is used inside a form",
              "attribute": "defaultValue"
            },
            {
              "kind": "field",
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Whether this field is required if this element is used inside a form",
              "attribute": "required"
            },
            {
              "kind": "field",
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Whether this field is disabled if this element is used inside a form",
              "attribute": "disabled"
            },
            {
              "kind": "field",
              "name": "clearOnSelect",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Whether to clear the field when an agent is selected.",
              "attribute": "clear-on-select"
            },
            {
              "kind": "field",
              "name": "store",
              "type": {
                "text": "ProfilesStore"
              },
              "description": "Profiles store for this element, not required if you embed this element inside a <profiles-context>",
              "attribute": "store"
            },
            {
              "kind": "field",
              "name": "excludedProfiles",
              "type": {
                "text": "ActionHash[]"
              },
              "default": "[]",
              "description": "Profiles that won't be listed in the search",
              "attribute": "excludedProfiles"
            },
            {
              "kind": "field",
              "name": "fieldLabel",
              "type": {
                "text": "string"
              },
              "description": "Label for the agent searching field.",
              "attribute": "field-label"
            },
            {
              "kind": "method",
              "name": "reportValidity"
            },
            {
              "kind": "method",
              "name": "reset"
            },
            {
              "kind": "field",
              "name": "searchFilter",
              "type": {
                "text": "string"
              },
              "default": "''"
            },
            {
              "kind": "method",
              "name": "onProfileSelected",
              "privacy": "private",
              "parameters": [
                {
                  "name": "profileHash",
                  "type": {
                    "text": "ActionHash"
                  }
                },
                {
                  "name": "profile",
                  "type": {
                    "text": "EntryRecord<Profile>"
                  }
                }
              ]
            }
          ],
          "events": [
            {
              "description": "Fired when the user selects some agent. Detail will have this shape: { agentPubKey: HoloHash }",
              "name": "profile-selected"
            }
          ],
          "attributes": [
            {
              "name": "clear-on-select",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Whether to clear the field when an agent is selected.",
              "fieldName": "clearOnSelect",
              "attribute": "clear-on-select"
            },
            {
              "name": "field-label",
              "type": {
                "text": "string"
              },
              "description": "Label for the agent searching field.",
              "fieldName": "fieldLabel",
              "attribute": "field-label"
            },
            {
              "name": "name",
              "type": {
                "text": "string"
              },
              "description": "The name of the field if this element is used inside a form\nRequired only if the element is used inside a form",
              "fieldName": "name"
            },
            {
              "name": "defaultValue",
              "type": {
                "text": "ActionHash | undefined"
              },
              "description": "The default value of the field if this element is used inside a form",
              "fieldName": "defaultValue"
            },
            {
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Whether this field is required if this element is used inside a form",
              "fieldName": "required"
            },
            {
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Whether this field is disabled if this element is used inside a form",
              "fieldName": "disabled"
            },
            {
              "name": "store",
              "type": {
                "text": "ProfilesStore"
              },
              "description": "Profiles store for this element, not required if you embed this element inside a <profiles-context>",
              "fieldName": "store"
            },
            {
              "name": "excludedProfiles",
              "type": {
                "text": "ActionHash[]"
              },
              "default": "[]",
              "description": "Profiles that won't be listed in the search",
              "fieldName": "excludedProfiles"
            }
          ],
          "mixins": [
            {
              "name": "SignalWatcher",
              "package": "@tnesh-stack/signals"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "search-profile",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "SearchProfile",
          "declaration": {
            "name": "SearchProfile",
            "module": "src/elements/search-profile.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "search-profile",
          "declaration": {
            "name": "SearchProfile",
            "module": "src/elements/search-profile.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/elements/search-profiles.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "SearchProfiles",
          "members": [
            {
              "kind": "field",
              "name": "name",
              "type": {
                "text": "string"
              },
              "description": "The name of the field if this element is used inside a form\nRequired only if the element is used inside a form",
              "attribute": "name"
            },
            {
              "kind": "field",
              "name": "defaultValue",
              "type": {
                "text": "Array<ActionHash>"
              },
              "default": "[]",
              "description": "The default value of the field if this element is used inside a form",
              "attribute": "defaultValue"
            },
            {
              "kind": "field",
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Whether this field is required if this element is used inside a form",
              "attribute": "required"
            },
            {
              "kind": "field",
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Whether this field is disabled if this element is used inside a form",
              "attribute": "disabled"
            },
            {
              "kind": "field",
              "name": "fieldLabel",
              "type": {
                "text": "string"
              },
              "description": "Label for the agent searching field.",
              "attribute": "field-label"
            },
            {
              "kind": "field",
              "name": "emptyListPlaceholder",
              "description": "Placeholder to show when the list is empty.",
              "attribute": "empty-list-placeholder"
            },
            {
              "kind": "field",
              "name": "store",
              "type": {
                "text": "ProfilesStore"
              },
              "description": "Profiles store for this element, not required if you embed this element inside a <profiles-context>",
              "attribute": "store"
            },
            {
              "kind": "field",
              "name": "excludedProfiles",
              "type": {
                "text": "ActionHash[]"
              },
              "default": "[]",
              "description": "Agents that won't be listed in the search",
              "attribute": "excludedProfiles"
            },
            {
              "kind": "method",
              "name": "reportValidity"
            },
            {
              "kind": "method",
              "name": "reset"
            }
          ],
          "events": [
            {
              "name": "profiles-changed",
              "type": {
                "text": "CustomEvent"
              }
            }
          ],
          "attributes": [
            {
              "name": "field-label",
              "type": {
                "text": "string"
              },
              "description": "Label for the agent searching field.",
              "fieldName": "fieldLabel",
              "attribute": "field-label"
            },
            {
              "name": "empty-list-placeholder",
              "description": "Placeholder to show when the list is empty.",
              "fieldName": "emptyListPlaceholder",
              "attribute": "empty-list-placeholder"
            },
            {
              "name": "name",
              "type": {
                "text": "string"
              },
              "description": "The name of the field if this element is used inside a form\nRequired only if the element is used inside a form",
              "fieldName": "name"
            },
            {
              "name": "defaultValue",
              "type": {
                "text": "Array<ActionHash>"
              },
              "default": "[]",
              "description": "The default value of the field if this element is used inside a form",
              "fieldName": "defaultValue"
            },
            {
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Whether this field is required if this element is used inside a form",
              "fieldName": "required"
            },
            {
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Whether this field is disabled if this element is used inside a form",
              "fieldName": "disabled"
            },
            {
              "name": "store",
              "type": {
                "text": "ProfilesStore"
              },
              "description": "Profiles store for this element, not required if you embed this element inside a <profiles-context>",
              "fieldName": "store"
            },
            {
              "name": "excludedProfiles",
              "type": {
                "text": "ActionHash[]"
              },
              "default": "[]",
              "description": "Agents that won't be listed in the search",
              "fieldName": "excludedProfiles"
            }
          ],
          "mixins": [
            {
              "name": "SignalWatcher",
              "package": "@tnesh-stack/signals"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "search-profiles",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "SearchProfiles",
          "declaration": {
            "name": "SearchProfiles",
            "module": "src/elements/search-profiles.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "search-profiles",
          "declaration": {
            "name": "SearchProfiles",
            "module": "src/elements/search-profiles.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/elements/textarea-with-mentions.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/elements/update-profile.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "UpdateProfile",
          "members": [
            {
              "kind": "field",
              "name": "store",
              "type": {
                "text": "ProfilesStore"
              },
              "description": "Profiles store for this element, not required if you embed this element inside a <profiles-context>",
              "attribute": "store"
            },
            {
              "kind": "method",
              "name": "updateProfile",
              "parameters": [
                {
                  "name": "previousProfileHash",
                  "type": {
                    "text": "ActionHash"
                  }
                },
                {
                  "name": "profile",
                  "type": {
                    "text": "Profile"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "myProfile",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "AsyncResult<EntryRecord<Profile> | undefined>"
                }
              }
            }
          ],
          "events": [
            {
              "name": "profile-updated",
              "type": {
                "text": "CustomEvent"
              },
              "description": "Fired after the profile has been created. Detail will have this shape: { profile: { nickname, fields } }"
            }
          ],
          "attributes": [
            {
              "name": "store",
              "type": {
                "text": "ProfilesStore"
              },
              "description": "Profiles store for this element, not required if you embed this element inside a <profiles-context>",
              "fieldName": "store"
            }
          ],
          "mixins": [
            {
              "name": "SignalWatcher",
              "package": "@tnesh-stack/signals"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "update-profile",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "UpdateProfile",
          "declaration": {
            "name": "UpdateProfile",
            "module": "src/elements/update-profile.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "update-profile",
          "declaration": {
            "name": "UpdateProfile",
            "module": "src/elements/update-profile.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/elements/utils/image.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "resizeAndExport",
          "parameters": [
            {
              "name": "img",
              "type": {
                "text": "HTMLImageElement"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "resizeAndExport",
          "declaration": {
            "name": "resizeAndExport",
            "module": "src/elements/utils/image.ts"
          }
        }
      ]
    }
  ]
}
